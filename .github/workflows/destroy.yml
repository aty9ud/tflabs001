name: destroy

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  TF_CLI_ARGS: "-no-color"
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
  TF_BASE_DIR: "./terraform"

jobs:

  terraform-plan-destroy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: |
          export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
          cd ${{ env.TF_BASE_DIR }}
          # terraform init -backend-config="access_key=${{ env.ARM_ACCESS_KEY }}"
          terraform init
      - name: Terraform Destroy Plan
        run: |
          cd ${{ env.TF_BASE_DIR }}
          terraform plan -var-file="conf/scope.tfvars" -destroy

  terraform-now-destroy:
    runs-on: ubuntu-latest
    needs: terraform-plan-destroy
    environment: live
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: |
          export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
          cd ${{ env.TF_BASE_DIR }}
          # terraform init -backend-config="access_key=${{ env.ARM_ACCESS_KEY }}"
          terraform init
      - name: Terraform Destroy
        run: |
          cd ${{ env.TF_BASE_DIR }}
          terraform destroy -var-file="conf/scope.tfvars" -auto-approve